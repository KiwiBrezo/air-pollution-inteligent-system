name: Data pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'

jobs:
  check_api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Test with pytest
        run: |
          poetry run pytest src/test/

  fetch_air_data:
    needs: check_api
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Run auto fetch data
        run: |
          poetry run python src/data/fetch_air_data.py
      - name: Add data to storage with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc add ./data/
          dvc push -r origin
      - name: Commit and Push Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git rm -r --cached .
          git add .
          git commit -m "Updated raw data on `date` with GitHub Actions"
          git push origin master
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  process_air_data:
    needs: fetch_air_data
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - env:
          SHA_NEW: ${{ needs.fetch_air_data.outputs.sha_new }}
        run: echo "$SHA_NEW"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.fetch_air_data.outputs.sha_new }}
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git pull
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Run auto fetch data
        run: |
          poetry run python src/data/process_air_data.py
      - name: Add data to storage with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc add ./data/
          dvc push -r origin
      - name: Commit and Push Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git rm -r --cached .
          git add .
          git commit -m "Updated raw data on `date` with GitHub Actions"
          git push origin master
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  fetch_weather_history_data:
    needs: process_air_data
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - env:
          SHA_NEW: ${{ needs.process_air_data.outputs.sha_new }}
        run: echo "$SHA_NEW"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.process_air_data.outputs.sha_new }}
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git pull
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Run auto fetch data
        run: |
          poetry run python src/data/fetch_weather_history_data.py
      - name: Add data to storage with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc add ./data/
          dvc push -r origin
      - name: Commit and Push Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git rm -r --cached .
          git add .
          git commit -m "Updated raw data on `date` with GitHub Actions"
          git push origin master
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  process_weather_history_data:
    needs: fetch_weather_history_data
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - env:
          SHA_NEW: ${{ needs.fetch_weather_history_data.outputs.sha_new }}
        run: echo "$SHA_NEW"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.fetch_weather_history_data.outputs.sha_new }}
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git pull
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Run auto fetch data
        run: |
          poetry run python src/data/process_weather_history_data.py
      - name: Add data to storage with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc add ./data/
          dvc push -r origin
      - name: Commit and Push Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git rm -r --cached .
          git add .
          git commit -m "Updated raw data on `date` with GitHub Actions"
          git push origin master
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  merge_air_weather_data:
    needs: process_weather_history_data
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - env:
          SHA_NEW: ${{ needs.process_weather_history_data.outputs.sha_new }}
        run: echo "$SHA_NEW"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.process_weather_history_data.outputs.sha_new }}
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git pull
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Run auto fetch data
        run: |
          poetry run python src/data/merge_air_weather_data.py
      - name: Add data to storage with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc add ./data/
          dvc push -r origin
      - name: Commit and Push Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git rm -r --cached .
          git add .
          git commit -m "Updated raw data on `date` with GitHub Actions"
          git push origin master
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  validate_air_weather_data:
    needs: merge_air_weather_data
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - env:
          SHA_NEW: ${{ needs.merge_air_weather_data.outputs.sha_new }}
        run: echo "$SHA_NEW"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.merge_air_weather_data.outputs.sha_new }}
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git pull
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Test with great_expectations and evidently
        run: |
          poetry run python great_expectations/run_air_pollution_first_checkpoint.py
      - name: Deploy Data Validation to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "great_expectations/uncommitted/data_docs/local_site"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_VALIDATION_ID }}
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  test_air_weather_data:
    needs: merge_air_weather_data
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - env:
          SHA_NEW: ${{ needs.merge_air_weather_data.outputs.sha_new }}
        run: echo "$SHA_NEW"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.merge_air_weather_data.outputs.sha_new }}
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git pull
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Test with great_expectations and evidently
        run: |
          poetry run python great_expectations/run_check_data_quality.py
      - name: Deploy Data Report to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "reports/data_report"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_REPORT_ID }}
      - name: Deploy Data Stability to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "reports/data_stability"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_STABILITY_ID }}
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  split_air_weather_data:
    needs: [validate_air_weather_data, test_air_weather_data]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    outputs:
      sha_new: ${{ steps.sha_new_outputs_SHA_NEW }}
    permissions:
      contents: write
    steps:
      - env:
          SHA_NEW: ${{ needs.validate_air_weather_data.outputs.sha_new }}
        run: echo "$SHA_NEW"
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.validate_air_weather_data.outputs.sha_new }}
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DVC
        uses: iterative/setup-dvc@v1
      - name: Download data with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git pull
          dvc pull -v -f -r origin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --without dev
      - name: Run auto fetch data
        run: |
          poetry run python src/data/data_splitter.py
      - name: Add data to storage with DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc add ./data/
          dvc push -r origin
      - name: Commit and Push Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git rm -r --cached .
          git add .
          git commit -m "Updated raw data on `date` with GitHub Actions"
          git push origin master
      - name: Save git HEAD sha
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"